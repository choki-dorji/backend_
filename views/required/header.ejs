<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <!-- Include the ApexCharts library -->

  <link rel="shortcut icon" href="/img/hostel.png" type="image/x-icon">
  <!-- Bootstrap link -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
  <meta name="viewport" content="width=device-width, initial-scale=1.0 shrink-to-fit=no">
  <!-- Bootstrap link -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
  <script src="https://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>

  <link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

  <link href="https://unpkg.com/boxicons@2.1.2/css/boxicons.min.css" rel="stylesheet" />



  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.3/css/all.css"
    integrity="sha384-HSZ7Ld1Gg5+8oWchX9zv5V5jLQQaQ8VwW5PD5D59pZa0TKOkuL8Jm9zvNSm7gJcu" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css">
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.bx.io/boxicons/4.0.0/css/boxicons.min.css">
  <link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0" />
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/css/bootstrap.min.css">

  <script src="/js/index.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
  <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.6/dist/sweetalert2.min.css">
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/js/bootstrap.min.js"></script>


  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.6/dist/sweetalert2.all.min.js"></script>

  <!-- <link rel="stylesheet" type="text/css" href="path/to/helvetica-font-file.ttf"> -->


  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/search.css">
  <link rel="stylesheet" href="/css/block.css">
  <link rel="stylesheet" href="/css/phone_view.css">
  <link rel="stylesheet" href="/css/swal.css">
  <link rel="stylesheet" href="/css/index.css">
  <link rel="stylesheet" href="/css/chart.css">
  <link rel="stylesheet" href="/css/view_block.css">
  <link rel="stylesheet" href="/css/room_alloc.css">
  <link rel="stylesheet" href="/css/request.css">
  <link rel="stylesheet" href="/css/searchh.css">
  <link rel="stylesheet" href="/css/disability.css">
  <link rel="stylesheet" href="/css/student-detail.css">
  <link rel="stylesheet" href="/css/room-details.css">


  <!-- <link rel="stylesheet" href="/css/searchresult.css"> -->
  <title>Hostel Allocation</title>
  <style>
    .student{
      width: 30px;
      height: 30px;
      border-radius: 50%;
    }
    .user-manual{
      position:absolute;
    right:7.5rem;
    margin-top:-2.1rem;
    color:#ff4b13;
    opacity:90%;
    font-size:24px;
    }
    .search-results-container {
      display: none;
      position: absolute;
      background-color: #ffffff;
      box-shadow:3px 3px 10px rgb(172, 172, 172);
      border-radius: 5px;
      width:310px;
      max-height: 200px;
      overflow-y: auto;
      z-index: 9999;
      margin-left: 250px;
    }

    /* Style for each search result item */
    .search-results div {
      padding: 10px;
      cursor: pointer;
    }
    .search-results div a{
      color:#4f4f4f;
      opacity:90%;
      text-decoration:none;
    }
    /* Style when hovering over a search result item */
    .search-results div:hover {
      background-color: #ff4a131e;

    }

    .search-results div:hover a{
    color:#ff4b13;
    }
@media(max-width:768px){
  .search-results-container {
    width:250px;
    margin-left:6.5rem;
  }
}

    .icon {
  position: relative;
  display: inline-block;

}

.badge-danger {
  position: absolute;
          top: 18.4rem;
          left:3.2rem;
          color: white;
          font-size: 12px;
}

@media(max-width:768px){

.badge-danger {

          top: 18.3rem;
          left:2.8rem;
}
.user-manual{
    right:5rem;
    margin-top: -2rem;
/* margin-top:-1.7rem; */
    }
.aa span, .aa i{
left:1.2rem;
position:relative
}
 .aa .mess{
left:0rem;
position:relative
}
}

.link {
  margin-left: 4px;
}
#loader-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #ffffff;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: 9999;
}

#loader {
  border: 4px solid #ff4b13;
  border-top: 4px solid transparent;
  border-radius: 50%;
  width: 50px;
  height: 50px;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

#loader-text {
  margin-top: 10px;
  color: #ff4b13;
  font-weight: bold;
}
.search-container a{
margin-left: 1rem;
}
.color{
 color: "#ff4b13";
}
  </style>
</head>


<body>
  <div id="loader-container">
  <div id="loader"></div>
  <div id="loader-text">Loading... <span id="loader-percentage">0%</span></div>
</div>



  <!-- SIDEBAR -->
  <section id="sidebar">

    <div class="horizontal-line justify-content-center align-items-center"></div>
<div class="side-flow">
    <ul class="side-menu">

      <li class="list">
        <a href="/dashboard/dash?token=<%= locals.token %>"  onclick="activateLink(this)" class="nav-link">
          <i class='bx bx-grid-alt me-5 icon housee bx-tada-hover'></i>
          <span class="link">Dashboard</span>
        </a>

      </li>
      <li class="list">
        <a href="/Allblocks" onclick="activateLink(this)" class="nav-link">
          <i class='far fa-building icon building bx-tada-hover'></i>
          <span class="link">Block</span>
        </a>
      </li>
      <li class="list">
        <a href="/room/add-room" onclick="activateLink(this)" class="nav-link" >
          <i class='bx bx-home icon housee bx-tada-hover'></i>
          <span class="link">Add room</span>
        </a>
      </li>
      <li class="list">
        <a href="/year/all-allocations" onclick="activateLink(this)" class="nav-link">
          <i class='bx bx-calendar icon housee bx-tada-hover'></i>
          <span class="link">Allocation</span>
        </a>
      </li>
      <li class="list">
        <a href="/room/search" onclick="activateLink(this)" class="nav-link aa" style="padding: 11px 16px 11px 0; " >
          <i class="material-icons icon sea bx-tada-hover">search</i>
          <span class="link">Search</span>
        </a>
      </li>
      <li class="list">
        <% if(notificationCount > 0) { %>
          <span class="badge badge-danger" style="background:#ff4b13;
          border-radius: 100%;   padding: 4px 6px;
          "><%= notificationCount %></span>
        <% } %>
  				<a href="/request" onclick="activateLink(this)" class="nav-link aa" style="padding: 6px 16px 6px 0;">
  					<span class="icon housee">
              <i class="bx bx-message-square-dots mess bx-tada-hover"></i>
            </span>
            <span class="link">Request</span>

  				</a>
  			</li>
      <li class="list ab choki">
        <a href="" onclick="activateLink(this)" class="nav-link">
          <i class='fas fa-wheelchair icon housee bx-tada-hover'></i>
          <span class="link">Handicapped</span>
        </a>
        <ul class="dropdown">
          <li class="list"><a href="/Allocate/disable" onclick="activateLink(this)" class="male">Male</a></li>
          <li class="list"><a href="/Allocate/disablefemale" onclick="activateLink(this)" class="female">Female</a></li>
        </ul>
      </li>

    </ul></div>
<br>
  </section>
  <!-- SIDEBAR -->

  <!-- NAVBAR -->
  <section id="content">
    <!-- NAVBAR -->

    <nav>

      <div class="small">
        <div class="logo">
          <a href="#" class="brand" style="position:absolute;"><img src="/img/hostel.png" id="nav_logo" alt=""></a>
        </div>


        <div>
          <i class='bx bx-menu toggle-sidebar box_menu'>
            <div class="btnn">
            </div>
          </i>
        </div>

      </div>

      <form action="#" class="bar-search">

        <div class="content">
          <div class="search">
            <input type="text" class="search__input" arial-label="search" placeholder="Search ..."
              oninput="handleSearch()">
            <button class="search__submit" arial-label="submit search"><i class="fas fa-search bx-tada-hover"></i>
            </button>
          </div>
        </div>
      </form>
      <div class="search-results-container">
        <div class="search-results">
        </div>
      </div>
    
      <div class="profile">
        <a href="/usermanual"><i class="far fa-question-circle user-manual"></i></a>
				<div class="pro">
					<img src="/img/rannas.png" class="pro-pic" alt="">
					<i class='bx bx-cog iconn'></i>
				</div>
				<ul class="profile-link">
					<div class="p-3">

						<h6 class="dropdown-header font-weight-bold text-left" style="color:#ff4b13; opacity:90%;">Hi,
            
							<%= username.name %>
         
            </h6>
						<div class="dropdown-divider d-flex align-items-center justify-content-center"></div>
						<div class="p-2">

							<a href="#" class="dropdown-item"><i class="far fa-user fa-lg fa-fw mr-2"
									style="color: #FF4B13;"></i> Profile Settings</a>
							<a href="#" id="logout-link" class="dropdown-item"><i class="fas fa-sign-out-alt fa-lg fa-fw mr-2"
									style=" color: #FF4B13;"></i>Log Out</a>
						</div>

					</div>
				</ul>
			</div>
    </nav>

    <script>
      document.addEventListener("DOMContentLoaded", function() {
  // Add event listener to the logout link
  document.getElementById("logout-link").addEventListener("click", function(e) {
    e.preventDefault(); // Prevent the default link behavior

    // Send fetch request to log out or redirect to the logout route
    fetch("/logout", {
      method: "GET",
      credentials: "same-origin"
    })
      .then(response => {
        if (response.ok) {
          // Handle success response, such as redirecting to the login page
          window.location.href = "/login";
        } else {
          // Handle error, display error message, or take appropriate action
          throw new Error("Error logging out");
        }
      })
      .catch(error => {
        // Handle error, display error message, or take appropriate action
        console.error("Error logging out:", error);
      });
  });
});

    </script>




    <script>
      function activateLink(link) {
        // remove the active class from all links
        const links = document.querySelectorAll('.nav-link');
        links.forEach(link => {
          link.classList.remove('block-back');
        });

        // add the active class to the clicked link
        link.classList.add('block-back');
      }
    </script>
    <!-- NAVBAR -->

    <script>
      // SIDEBAR DROPDOWN
      const allDropdown = document.querySelectorAll("#sidebar .side-dropdown");
      const sidebar = document.getElementById("sidebar");
        sidebar.classList.add("hide");

      allDropdown.forEach((item) => {
        const a = item.parentElement.querySelector("a:first-child");
        a.addEventListener("click", function (e) {
          e.preventDefault();

          if (!this.classList.contains("active")) {
            allDropdown.forEach((i) => {
              const aLink = i.parentElement.querySelector("a:first-child");

              aLink.classList.remove("active");
              i.classList.remove("show");
            });
          }

          this.classList.toggle("active");
          item.classList.toggle("show");
        });
      });

      // SIDEBAR COLLAPSE
      const toggleSidebar = document.querySelector("nav .toggle-sidebar");
      const allSideDivider = document.querySelectorAll("#sidebar .divider");

      if (sidebar.classList.contains("hide")) {
        allSideDivider.forEach((item) => {
          item.textContent = "-";
        });
        allDropdown.forEach((item) => {
          const a = item.parentElement.querySelector("a:first-child");
          a.classList.remove("active");
          item.classList.remove("show");
        });
      } else {
        allSideDivider.forEach((item) => {
          item.textContent = item.dataset.text;
        });
      }

      toggleSidebar.addEventListener("click", function () {
        sidebar.classList.toggle("hide");

        if (sidebar.classList.contains("hide")) {
          allSideDivider.forEach((item) => {
            item.textContent = "-";
          });

          allDropdown.forEach((item) => {
            const a = item.parentElement.querySelector("a:first-child");
            a.classList.remove("active");
            item.classList.remove("show");
          });
        } else {
          allSideDivider.forEach((item) => {
            item.textContent = item.dataset.text;
          });
        }
      });

      sidebar.addEventListener("mouseleave", function () {
        if (this.classList.contains("hide")) {
          allDropdown.forEach((item) => {
            const a = item.parentElement.querySelector("a:first-child");
            a.classList.remove("active");
            item.classList.remove("show");
          });
          allSideDivider.forEach((item) => {
            item.textContent = "-";
          });
        }
      });

      sidebar.addEventListener("mouseenter", function () {
        if (this.classList.contains("hide")) {
          allDropdown.forEach((item) => {
            const a = item.parentElement.querySelector("a:first-child");
            a.classList.remove("active");
            item.classList.remove("show");
          });
          allSideDivider.forEach((item) => {
            item.textContent = item.dataset.text;
          });
        }
      });

      // PROFILE DROPDOWN
      const profile = document.querySelector("nav .profile");
      const imgProfile = profile.querySelector(".iconn");
      const dropdownProfile = profile.querySelector(".profile-link");

      imgProfile.addEventListener("click", function () {
        dropdownProfile.classList.toggle("show");
      });

      // MENU
      const allMenu = document.querySelectorAll("main .content-data .head .menu");

      allMenu.forEach((item) => {
        const icon = item.querySelector(".icon");
        const menuLink = item.querySelector(".menu-link");

        icon.addEventListener("click", function () {
          menuLink.classList.toggle("show");
        });
      });

      window.addEventListener("click", function (e) {
        if (e.target !== imgProfile) {
          if (e.target !== dropdownProfile) {
            if (dropdownProfile.classList.contains("show")) {
              dropdownProfile.classList.remove("show");
            }
          }
        }

        allMenu.forEach((item) => {
          const icon = item.querySelector(".icon");
          const menuLink = item.querySelector(".menu-link");

          if (e.target !== icon) {
            if (e.target !== menuLink) {
              if (menuLink.classList.contains("show")) {
                menuLink.classList.remove("show");
              }
            }
          }
        });
      });
      // USER DETAILS.HTML
      // for the students management tab(dropdowns)
      const dropdowns = document.querySelectorAll(".dropdown");

      dropdowns.forEach((dropdown) => {
        const select = dropdown.querySelector(".select");
        const caret = dropdown.querySelector(".caret");
        const menu = dropdown.querySelector(".menu");
        const options = dropdown.querySelectorAll(".menu li");
        const selected = dropdown.querySelector(".selected");

        select.addEventListener("click", () => {
          select.classList.toggle("select-clicked");
          caret.classList.toggle("caret-rotate");
          menu.classList.toggle("menu-open");
        });

        options.forEach((option) => {
          option.addEventListener("click", () => {
            selected.innerText = option.innerText;
            select.classList.remove("select-clicked");
            caret.classList.remove("caret-rotate");
            menu.classList.remove("menu-open");
            options.forEach((option) => {
              option.classList.remove("active");
            });

            option.classList.add("active");
          });
        });
      });

      // For Table Search
      const search = document.querySelector(".input-group input"),
        table_rows = document.querySelectorAll("tbody tr"),
        table_headings = document.querySelectorAll("thead th");

      // 1. Searching for specific data of HTML table
      search.addEventListener("input", searchTable);

      function searchTable() {
        table_rows.forEach((row, i) => {
          let table_data = row.textContent.toLowerCase(),
            search_data = search.value.toLowerCase();

          row.classList.toggle("hide", table_data.indexOf(search_data) < 0);
          row.style.setProperty("--delay", i / 25 + "s");
        });

        document.querySelectorAll("tbody tr:not(.hide)").forEach((visible_row, i) => {
          visible_row.style.backgroundColor =
            i % 2 == 0 ? "transparent" : "#0000000b";
        });
      }

      // 2. Sorting | Ordering data of HTML table

      table_headings.forEach((head, i) => {
        let sort_asc = true;
        head.onclick = () => {
          table_headings.forEach((head) => head.classList.remove("active"));
          head.classList.add("active");

          document
            .querySelectorAll("td")
            .forEach((td) => td.classList.remove("active"));
          table_rows.forEach((row) => {
            row.querySelectorAll("td")[i].classList.add("active");
          });

          head.classList.toggle("asc", sort_asc);
          sort_asc = head.classList.contains("asc") ? false : true;

          sortTable(i, sort_asc);
        };
      });

      function sortTable(column, sort_asc) {
        [...table_rows]
          .sort((a, b) => {
            let first_row = a
              .querySelectorAll("td")
            [column].textContent.toLowerCase(),
              second_row = b.querySelectorAll("td")[column].textContent.toLowerCase();

            return sort_asc
              ? first_row < second_row
                ? 1
                : -1
              : first_row < second_row
                ? -1
                : 1;
          })
          .map((sorted_row) =>
            document.querySelector("tbody").appendChild(sorted_row)
          );
      }

      // Edit User dettails popp up
      function EditStdDetails() {
        var blur = document.getElementById("blur");
        blur.classList.toggle("active");
        var popup = document.getElementById("popup");
        popup.classList.toggle("active");
      }
    </script>
    <script>
      // Get the current page or route
var currentPage = window.location.pathname;

// Remove the active class from all nav-links
var navLinks = document.querySelectorAll('.nav-link');
navLinks.forEach(function (link) {
  link.classList.remove('block-back');
});

// Find the corresponding nav-link based on the current page and add the active class
var activeLink = document.querySelector('.nav-link[href="' + currentPage + '"]');
if (!activeLink) {
  
    // Check if the current page URL contains the disabled male or female routes
  var isDisabledMale = currentPage.includes('/Allocate/disable');
  var isDisabledFemale = currentPage.includes('/Allocate/disablefemale');

  console.log('diable', isDisabledMale, isDisabledFemale);
  // Check if the current page URL contains a query string
  var queryStringIndex = currentPage.indexOf('?');
  if (queryStringIndex !== -1) {
    // Remove the query string from the current page URL
    var pageWithoutQueryString = currentPage.substring(0, queryStringIndex);

  

    // Find the parent link based on the modified URL and add the active class
    activeLink = document.querySelector('.nav-link[href="' + pageWithoutQueryString + '"]');
  } else if(window.location.pathname == "/dashboard/dash") {
    activeLink = document.querySelector('.nav-link[href="/dashboard/dash?token=<%= locals.token %>"]');
  } else if (isDisabledMale || isDisabledFemale) {
    console.log('happy')
    // Find the "Handicapped" link and add the active class
    activeLink = document.querySelector('.choki .nav-link');
    
  }

}

if (activeLink) {
  activeLink.classList.add('block-back');
}

    </script>
    <script type="text/javascript">
      // Step 1: Add event listener to search input
      const searchInput = document.querySelector('.search__input');
      searchInput.addEventListener('input', handleSearch);
      // searchInput.addEventListener('blur', hideSearchResults);
      document.addEventListener('click', function(event) {
      const searchResultsContainer = document.querySelector('.search-results-container');
      if (
        event.target.closest('.search-results-container') === null &&
        event.target !== searchInput
      ) {
        hideSearchResults();
      }
    });

      // Step 2: Handle search event
      // Step 2: Handle search event
      function handleSearch() {
        // Step 2a: Retrieve search query
        const searchQuery = searchInput.value.trim();

        // Step 3: Implement search logic
        let results = [];

        Promise.all([
          fetch(`/api/blocks`).then(response => {
            if (!response.ok) {
              throw new Error('Failed to fetch data');
            }
            return response.json();
          }),
          fetch(`/room/api/rooms`).then(response => {
            if (!response.ok) {
              throw new Error('Failed to fetch data');
            }
            return response.json();
          }),
          fetch(`/students/allstudents`).then(response => {
            if (!response.ok) {
              throw new Error('Failed to fetch data');
            }
            return response.json();
          })
        ])
          .then(([blocksData, roomsData, studentdata]) => {
            const blocks = blocksData.map(block => ({
              id: block._id,
              name:   block.block_name,
              type: 'block'
            }));
            const rooms = roomsData.map(room => ({
              id: room._id,
              name: room.room_name,
              type: 'room'
            }));
            const students = studentdata.map(student => ({
              id: student.sid,
              name: student.name + " (" + "year " + student.year + ")",
              type: 'student',
              url: `https://drive.google.com/uc?id=${student.photo}`
            }));

            results = [...blocks, ...rooms, ...students].filter(item =>
              item.name.toLowerCase().includes(searchQuery.toLowerCase())
            );

            // Step 4: Update DOM with search results
            displaySearchResults(results);
          })
          .catch(error => {
            console.error(error);
          });
      }

      console.log(results)

      // Step 4: Display search results in the DOM
      function displaySearchResults(results) {
        const searchResultsContainer = document.querySelector('.search-results');
        searchResultsContainer.innerHTML = ''; // Clear previous results

        if (results.length === 0) {
          searchResultsContainer.innerHTML = 'No results found.';
          return;
        }

        // Create and append result elements to the container
        results.forEach((result) => {
  const resultItem = document.createElement('div');
  const resultLink = document.createElement('a');

  resultItem.className="search-container"
  

  resultLink.href = '#';
  resultLink.textContent = result.name;

  if (result.type === 'block') {
    const iconElement = document.createElement('i');
    iconElement.className = 'far fa-building color'; // Building icon class
    resultItem.appendChild(iconElement);
  } else if (result.type === 'room') {
    const iconElement = document.createElement('i');
    iconElement.className = 'bx bx-home color'; // Room icon class
    resultItem.appendChild(iconElement);
  } else if (result.type === 'student') {
    const imageElement = document.createElement('img');
    imageElement.className = 'student';
    imageElement.src = result.url; // Set the image URL for the student
    imageElement.alt = result.name; // Set the alt text for the image
    resultItem.appendChild(imageElement);
  }

  resultItem.appendChild(resultLink);
  searchResultsContainer.appendChild(resultItem);

  resultItem.addEventListener('click', () => {
    // Handle click event to display details
    displayDetails(result);
  });
});



        // Show the search results container
        const searchResultsContainerWrapper = document.querySelector('.search-results-container');
        searchResultsContainerWrapper.style.display = 'block';
      }

      // Function to display details based on item type and ID
      function displayDetails(item) {
        if (item.type === 'block') {
          fetch(`/api/blocks/${item.id}`)
            .then(response => {
              if (!response.ok) {
                throw new Error('Failed to fetch block details');
              }
              return response.json();
            })
            .then(blockDetails => {
              // Handle block details
              window.location.href = `/block-details?id=${blockDetails._id}`;
              console.log('Block Details:', blockDetails);
              // Display block details in the UI
            })
            .catch(error => {
              console.error(error);
            });
        } else if (item.type === 'room') {
          fetch(`/room/api/search?room_name=${item.name}`)
            .then(response => {
              if (!response.ok) {
                throw new Error('Failed to fetch room details');
              }
              return response.json();
            })
            .then(roomDetails => {
              // Handle room details
              window.location.href = `/room/room-details?id=${roomDetails.room._id}`;
              console.log('Room Details:', roomDetails);
              // Display room details in the UI
            })
            .catch(error => {
              console.error(error);
            });
        } else if (item.type === 'student') {
          console.log("studentrs", item.id) 
          fetch(`/students/search?studentSID=${item.id}`)
            .then(response => {
              if (!response.ok) {
                throw new Error('Failed to fetch student details');
              }
              return response.json();
            })
            .then(roomDetails => {
              console.log("id ", roomDetails)
              // Handle room details
              window.location.href = `/students/students/display?id=${item.id}`;
              console.log('Room Details:', roomDetails);
              // Display room details in the UI
            })
            .catch(error => {
              console.error(error);
            });
        }
      }

      function hideSearchResults() {
      const searchResultsContainer = document.querySelector('.search-results-container');
      searchResultsContainer.style.display = 'none';
    }


    </script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
  var loaderPercentage = document.getElementById("loader-percentage");

  // Update the loading percentage
  function updateLoaderPercentage(percentage) {
    loaderPercentage.textContent = percentage + "%";
  }

  // Hide the loader when the page finishes loading
  window.addEventListener("load", function () {
    document.getElementById("loader-container").style.display = "none";
  });

  // Track page load progress
  var totalPageResources = 0;
  var loadedResources = 0;

  function incrementLoadedResources() {
    loadedResources++;
    var percentage = Math.floor((loadedResources / totalPageResources) * 100);
    updateLoaderPercentage(percentage);
  }

  // Count the number of page resources (e.g., images, scripts, stylesheets)
  var pageResources = document.querySelectorAll("img, script, link[rel='stylesheet']");
  totalPageResources = pageResources.length;

  // Increment the loaded resources counter when a resource finishes loading
  pageResources.forEach(function (resource) {
    if (resource.complete) {
      incrementLoadedResources();
    } else {
      resource.addEventListener("load", incrementLoadedResources);
      resource.addEventListener("error", incrementLoadedResources);
    }
  });
});


</script>
